Important PC Addresses to Potentially Break on:

*** Boot Process (BIOS: SCPH1001.BIN) ***
0xbfc0'0000 -- Start
0xbfc0'000c -- Set BIOS ROM Delay/Size to 0x0013'243f
0xbfc0'0001 -- Set Ram Size to 0xb88
0xbfc0'0160 -- Set Com Delay to 0x0003'1125
0xbfc0'0168 -- Set Expansion 1 Base Addr to 0x1f00'0000
0xbfc0'0174 -- Set Expansion 2 Base Addr to 0x1f80'2000
0xbfc0'0180 -- Set Expansion 1 Delay/Size to 0x0013'243f
0xbfc0'018c -- Set SPU_DELAY Delay/Size to 0x2009'31e1
0xbfc0'0198 -- Set CDROM_DELAY Delay/Size to 0x0002'0843
0xbfc0'01a0 -- Set Expansion 3 Delay/Size to 0x0000'3022
0xbfc0'01ac -- Set Expansion 2 Delay/Size to 0x0007'0777
0xbfc0'01b0 -- Zero out all registers
// Initialize cache (3 steps)
0xbfc0'0234 -- Set Cache Control to 0x804 (Enable Code-Cache)
0xbfc0'023c -- Set Cop0.sr to 0x0001'0000 (Isolate Cache)
0xbfc0'0250 -- Init Cache Step 1
0xbfc0'0278 -- Set Cop0.sr to 0 (Unset Isolate Cache)
0xbfc0'0288 -- Set Cache Control to 0x0000'0800 (Enable Code-Cache)
0xbfc0'028c -- Set Cop0.sr to 0x0001'0000 (Isolate Cache)
0xbfc0'029c -- Init Cache Step 2
0xbfc0'0328 -- Set Cop0.sr to 0 (Unset Isolate Cache)
0xbfc0'0334 -- Init Cache Final Step
0xbfc0'0364 -- Set Cache Control to 0x0001'e988 (Enable Scratchpad 1 and 2 and CC)
0xbfc0'0368 -- Zero out Cop0 Data Registers
// Setting special values in Bios Memory
0xbfc0'03f0 -- Set Ram size in Bios Memory (0x60) to 0xb88
0xbfc0'03f8 -- Set Unknown field in Bios Memory (0x64) to 0
0xbfc0'0404 -- Set Unknown field in Bios Memory (0x68) to 0xff
// SPU Volume Init
0xbfc0'040c -- Set SPU Main Volume Left to 0
0xbfc0'0410 -- Set SPU Main Volume Right to 0
0xbfc0'0414 -- Set SPU Reverb Output Volume Left to 0
0xbfc0'041c -- Set SPU Reverb Output Volume Right to 0
// POST
0xbfc0'1a74 -- Set POST to a value
// Flush Write Queue Subroutine
0xbfc0'3998 -- Flush Write Queue
// Relocating BIOS Code @ 0xbfc1'0000 to cached ram @ 0xa000'0500
0xbfc0'0438 -- Looks Like it is copying over stuff from ROM into RAM
0xbfc0'0454 -- This is where the call to 0xa000'0500 happens 

*** Boot Process Part 2 ***
0xa000'0500 -- Starting execution of bios code in RAM
0xa000'0508 -- Jump to 0x0000'0598
// zeroing out some kernel data (0x0000'7460 - 0x0000'8920)
0x0000'05a8 -- Zero out some kernel data
// Bunch of function calls in ROM
0xbfc0'683c -- Jumped back to ROM, looking to jump to ROM function
               (looks like it is calling POST)
0xbfc0'6844 -- Calling another function 
               (moves some ROM code/data into RAM @ 0x0000'0200)
0xbfc0'684c -- Calling another function
               (moves some ROM code/data into RAM @ 0xa000'00a0)
0xbfc0'6854 -- Calling another function
               (Jumps to 0x0000'00c0)
0x0000'00c0 -- Jumps to 0x0000'0600
// indirect jump
0x0000'0610 -- Loads function pointer from 0x0000'06e4
0x0000'0618 -- Jump to loaded function pointer (0x0000'0540)
0x0000'0564 -- moves some (ROM or RAM?) code/data into RAM @ 0x0000'0200
0x0000'058c -- moves some RAM code/data into RAM @ 0x0000'02ec
// return to top function call function @ 0xbfc0'685c
0xbfc0'685c -- indirect jump to 0x0000'00c0
0x0000'00c8 -- Jump to 0x0000'0600
0x0000'0610 -- Load function pointer from 0x690
0x0000'0618 -- Jump to 0x0000'0eb0
0x0000'0ec8 -- Load some data from 0x0000'0f0c
0x0000'0ef0 -- Copy some more data from 0x0000'0f0c to 0x8000'0000
0x0000'00a8 -- Indirect jump to 0x5c4
0x0000'05d0 -- Load function pointer from 0x310
0xbfc0'1920 -- Get Cop0 Status Register
0xbfc0'193c -- Added value, but pc never increased...Bug????
               - so what happened was it jumped to the same loc,
                 not sure why
               - Looks like re-initializing cache?
// back to top function
0xbfc0'6864 -- indirect function call to 0x0000'00b0
0x0000'00b0 -- jump to 0x0000'05e0
0x0000'0f3c -- Store 0x6cf4 to 0x75d0
0xbfc0'686c -- Another call to setPOST

// *** Bug Areas ***
0xbfc068a4 -- looks like this eventually makes its way to 0xa0 
              (which may be a fail state)
0x000028a0 -- This function returns an error?
0xbfco6fdc -- Device Init()? This fails?